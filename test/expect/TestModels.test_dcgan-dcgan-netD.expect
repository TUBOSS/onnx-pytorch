graph torch-jit-export (%name: "0"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 64
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 64
      }
      dim {
        dim_value: 64
      }
    }
  }
}
, %name: "1"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 64
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 4
      }
      dim {
        dim_value: 4
      }
    }
  }
}
, %name: "2"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 128
      }
      dim {
        dim_value: 64
      }
      dim {
        dim_value: 4
      }
      dim {
        dim_value: 4
      }
    }
  }
}
, %name: "3"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 128
      }
    }
  }
}
, %name: "4"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 128
      }
    }
  }
}
, %name: "5"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 128
      }
    }
  }
}
, %name: "6"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 128
      }
    }
  }
}
, %name: "7"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
      dim {
        dim_value: 128
      }
      dim {
        dim_value: 4
      }
      dim {
        dim_value: 4
      }
    }
  }
}
, %name: "8"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
    }
  }
}
, %name: "9"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
    }
  }
}
, %name: "10"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
    }
  }
}
, %name: "11"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
    }
  }
}
, %name: "12"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 256
      }
      dim {
        dim_value: 4
      }
      dim {
        dim_value: 4
      }
    }
  }
}
, %name: "13"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "14"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "15"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "16"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "17"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 1
      }
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 4
      }
      dim {
        dim_value: 4
      }
    }
  }
}
) {
  %19 = Conv[kernel_shape = [4, 4], strides = [2, 2], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%0, %1)
  %20 = LeakyRelu[alpha = 0.200000002980232](%19)
  %22 = Conv[kernel_shape = [4, 4], strides = [2, 2], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%20, %2)
  %23 = BatchNormalization[is_test = 1, epsilon = 9.99999974737875e-06, momentum = 0.899999976158142, consumed_inputs = [0, 0, 0, 1, 1]](%22, %3, %4, %5, %6)
  %24 = LeakyRelu[alpha = 0.200000002980232](%23)
  %26 = Conv[kernel_shape = [4, 4], strides = [2, 2], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%24, %7)
  %27 = BatchNormalization[is_test = 1, epsilon = 9.99999974737875e-06, momentum = 0.899999976158142, consumed_inputs = [0, 0, 0, 1, 1]](%26, %8, %9, %10, %11)
  %28 = LeakyRelu[alpha = 0.200000002980232](%27)
  %30 = Conv[kernel_shape = [4, 4], strides = [2, 2], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%28, %12)
  %31 = BatchNormalization[is_test = 1, epsilon = 9.99999974737875e-06, momentum = 0.899999976158142, consumed_inputs = [0, 0, 0, 1, 1]](%30, %13, %14, %15, %16)
  %32 = LeakyRelu[alpha = 0.200000002980232](%31)
  %34 = Conv[kernel_shape = [4, 4], strides = [1, 1], pads = [0, 0, 0, 0], dilations = [1, 1], group = 1](%32, %17)
  %35 = Sigmoid(%34)
  %36 = Reshape[shape = [-1, 1]](%35)
  return %name: "36"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 64
      }
      dim {
        dim_value: 1
      }
    }
  }
}

}