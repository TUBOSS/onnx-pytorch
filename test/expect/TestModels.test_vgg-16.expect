graph torch-jit-export (%1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11, %12, %13, %14, %15, %16, %17, %18, %19, %20, %21, %22, %23, %24, %25, %26, %27, %28, %29, %30, %31, %32, %33) {
  %35 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%1, %2)
  %36 = Add[broadcast = 1, axis = 1](%35, %3)
  %37 = Relu(%36)
  %39 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%37, %4)
  %40 = Add[broadcast = 1, axis = 1](%39, %5)
  %41 = Relu(%40)
  %42 = MaxPool[kernel_shape = [2, 2], pads = [0, 0], dilations = [1, 1], strides = [2, 2]](%41)
  %44 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%42, %6)
  %45 = Add[broadcast = 1, axis = 1](%44, %7)
  %46 = Relu(%45)
  %48 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%46, %8)
  %49 = Add[broadcast = 1, axis = 1](%48, %9)
  %50 = Relu(%49)
  %51 = MaxPool[kernel_shape = [2, 2], pads = [0, 0], dilations = [1, 1], strides = [2, 2]](%50)
  %53 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%51, %10)
  %54 = Add[broadcast = 1, axis = 1](%53, %11)
  %55 = Relu(%54)
  %57 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%55, %12)
  %58 = Add[broadcast = 1, axis = 1](%57, %13)
  %59 = Relu(%58)
  %61 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%59, %14)
  %62 = Add[broadcast = 1, axis = 1](%61, %15)
  %63 = Relu(%62)
  %64 = MaxPool[kernel_shape = [2, 2], pads = [0, 0], dilations = [1, 1], strides = [2, 2]](%63)
  %66 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%64, %16)
  %67 = Add[broadcast = 1, axis = 1](%66, %17)
  %68 = Relu(%67)
  %70 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%68, %18)
  %71 = Add[broadcast = 1, axis = 1](%70, %19)
  %72 = Relu(%71)
  %74 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%72, %20)
  %75 = Add[broadcast = 1, axis = 1](%74, %21)
  %76 = Relu(%75)
  %77 = MaxPool[kernel_shape = [2, 2], pads = [0, 0], dilations = [1, 1], strides = [2, 2]](%76)
  %79 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%77, %22)
  %80 = Add[broadcast = 1, axis = 1](%79, %23)
  %81 = Relu(%80)
  %83 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%81, %24)
  %84 = Add[broadcast = 1, axis = 1](%83, %25)
  %85 = Relu(%84)
  %87 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%85, %26)
  %88 = Add[broadcast = 1, axis = 1](%87, %27)
  %89 = Relu(%88)
  %90 = MaxPool[kernel_shape = [2, 2], pads = [0, 0], dilations = [1, 1], strides = [2, 2]](%89)
  %91 = Reshape[shape = [2, -1]](%90)
  %92 = Transpose[perm = [1, 0]](%28)
  %93 = Transpose(%92)
  %94 = FC(%91, %93, %29)
  %95 = Relu(%94)
  %97, %98 = Dropout[ratio = 0.5, is_test = 1](%95)
  %99 = Transpose[perm = [1, 0]](%30)
  %100 = Transpose(%99)
  %101 = FC(%97, %100, %31)
  %102 = Relu(%101)
  %104, %105 = Dropout[ratio = 0.5, is_test = 1](%102)
  %106 = Transpose[perm = [1, 0]](%32)
  %107 = Transpose(%106)
  %108 = FC(%104, %107, %33)
  return %108
}