graph torch-jit-export (%name: "0"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 2
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 224
      }
      dim {
        dim_value: 224
      }
    }
  }
}
, %name: "1"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 64
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "2"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 64
      }
    }
  }
}
, %name: "3"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 64
      }
      dim {
        dim_value: 64
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "4"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 64
      }
    }
  }
}
, %name: "5"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 128
      }
      dim {
        dim_value: 64
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "6"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 128
      }
    }
  }
}
, %name: "7"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 128
      }
      dim {
        dim_value: 128
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "8"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 128
      }
    }
  }
}
, %name: "9"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
      dim {
        dim_value: 128
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "10"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
    }
  }
}
, %name: "11"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
      dim {
        dim_value: 256
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "12"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
    }
  }
}
, %name: "13"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
      dim {
        dim_value: 256
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "14"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
    }
  }
}
, %name: "15"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 256
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "16"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "17"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "18"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "19"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "20"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "21"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "22"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "23"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "24"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "25"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "26"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "27"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 4096
      }
      dim {
        dim_value: 25088
      }
    }
  }
}
, %name: "28"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 4096
      }
    }
  }
}
, %name: "29"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 4096
      }
      dim {
        dim_value: 4096
      }
    }
  }
}
, %name: "30"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 4096
      }
    }
  }
}
, %name: "31"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 1000
      }
      dim {
        dim_value: 4096
      }
    }
  }
}
, %name: "32"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 1000
      }
    }
  }
}
) {
  %33 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%0, %1)
  %34 = Add[broadcast = 1, axis = 1](%33, %2)
  %35 = Relu(%34)
  %36 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%35, %3)
  %37 = Add[broadcast = 1, axis = 1](%36, %4)
  %38 = Relu(%37)
  %39 = MaxPool[kernel_shape = [2, 2], pads = [0, 0], strides = [2, 2]](%38)
  %40 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%39, %5)
  %41 = Add[broadcast = 1, axis = 1](%40, %6)
  %42 = Relu(%41)
  %43 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%42, %7)
  %44 = Add[broadcast = 1, axis = 1](%43, %8)
  %45 = Relu(%44)
  %46 = MaxPool[kernel_shape = [2, 2], pads = [0, 0], strides = [2, 2]](%45)
  %47 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%46, %9)
  %48 = Add[broadcast = 1, axis = 1](%47, %10)
  %49 = Relu(%48)
  %50 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%49, %11)
  %51 = Add[broadcast = 1, axis = 1](%50, %12)
  %52 = Relu(%51)
  %53 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%52, %13)
  %54 = Add[broadcast = 1, axis = 1](%53, %14)
  %55 = Relu(%54)
  %56 = MaxPool[kernel_shape = [2, 2], pads = [0, 0], strides = [2, 2]](%55)
  %57 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%56, %15)
  %58 = Add[broadcast = 1, axis = 1](%57, %16)
  %59 = Relu(%58)
  %60 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%59, %17)
  %61 = Add[broadcast = 1, axis = 1](%60, %18)
  %62 = Relu(%61)
  %63 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%62, %19)
  %64 = Add[broadcast = 1, axis = 1](%63, %20)
  %65 = Relu(%64)
  %66 = MaxPool[kernel_shape = [2, 2], pads = [0, 0], strides = [2, 2]](%65)
  %67 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%66, %21)
  %68 = Add[broadcast = 1, axis = 1](%67, %22)
  %69 = Relu(%68)
  %70 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%69, %23)
  %71 = Add[broadcast = 1, axis = 1](%70, %24)
  %72 = Relu(%71)
  %73 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%72, %25)
  %74 = Add[broadcast = 1, axis = 1](%73, %26)
  %75 = Relu(%74)
  %76 = MaxPool[kernel_shape = [2, 2], pads = [0, 0], strides = [2, 2]](%75)
  %77 = Reshape[shape = [2, -1]](%76)
  %78 = Transpose[perm = [1, 0]](%27)
  %80 = Gemm[alpha = 1, beta = 1, broadcast = 1](%77, %78, %28)
  %81 = Relu(%80)
  %82, %83 = Dropout[is_test = 1, ratio = 0.5](%81)
  %84 = Transpose[perm = [1, 0]](%29)
  %86 = Gemm[alpha = 1, beta = 1, broadcast = 1](%82, %84, %30)
  %87 = Relu(%86)
  %88, %89 = Dropout[is_test = 1, ratio = 0.5](%87)
  %90 = Transpose[perm = [1, 0]](%31)
  %92 = Gemm[alpha = 1, beta = 1, broadcast = 1](%88, %90, %32)
  return %name: "92"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 2
      }
      dim {
        dim_value: 1000
      }
    }
  }
}

}